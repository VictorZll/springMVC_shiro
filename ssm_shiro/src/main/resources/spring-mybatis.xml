<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	<!-- 开启注解配置 -->
	<context:annotation-config/>
	<!-- 设置组件扫描基本包 -->
	<context:component-scan base-package="com.newroad.**.service.imp,com.newroad.**.controller"/>
		
	<!-- 引入配置文件 -->
	<context:property-placeholder location="classpath:jdbc.properties"/>
	<!-- 配置数据源 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
		<property name="driverClassName" value="${jdbc.driver}"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
		
		<property name="initialSize" value="${poolInitSize}"/>
		<property name="maxActive" value="${poolMaxSize}"/>
	</bean>
	
	<!-- 配置SqlSessionFactory -->
	<bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<!-- 如果核心配置文件中，没有任何的信息，可以不用配置 -->
		<!-- <property name="configLocation" value="classpath:mybatis-config.xml"/> -->
	</bean>
	
	<!-- 配置Mapper代理实现 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.newroad.**.dao"/>
		<property name="sqlSessionFactoryBeanName" value="sessionFactory"/>
	</bean>
	
	<!-- 配置事务管理 -->
	<tx:annotation-driven proxy-target-class="true" transaction-manager="transactionManager" />
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"  >
		<property name="dataSource" ref="dataSource" />
	</bean>

</beans>
